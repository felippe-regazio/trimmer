"use strict";var _extends=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n,t=arguments[r];for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};function send(e,r){return postMessage({payload:r,type:e.toLowerCase()})}function slugify(e){return e.toString().toLowerCase().normalize("NFD").trim().replace(/\s+/g,"-").replace(/[^\w\-.]+/g,"").replace(/\-\-+/g,"-")}function parseArgs(e,r){var n=[];return(e=(e=(e=e.replace(/\s+/g," ")).replace(/\{\{file\}\}/g,r)).replace(/\{\{file_slugify\}\}/g,slugify(r))).split('"').forEach(function(e,r){e=e.trim(),r%2==1?n.push(e):n=n.concat(e.split(" "))}),n}function parseFile(e){var r={};return e instanceof Uint8Array&&(r=e),e instanceof File&&(r=fileToUint8Array(e)),{name:e.name,data:r}}function fileToUint8Array(e){return new Uint8Array((new FileReaderSync).readAsArrayBuffer(e))}function execute(e){send("busy",{});var r=e.files,t=e.args,s=[],o=[],a="";if(!r||!r.length)return send("error",{args:t,stdout:"",error:'The "files" payload is empty, there is nothing to process'});Array.from(r).forEach(function(e){if(o.length)return!1;var r=parseFile(e),n=parseArgs(t,e.name),e=ffmpeg_run({stdin:function(){},files:[r],arguments:n,print:function(e){return a+="\n"+e},printErr:function(e){return a+="\n"+e},onExit:function(e){return o.push({error:e,stdout:a}),!1}});e&&e.length?s.push({buffers:e,name:r.name,args:n.join(" "),blobs:e.map(function(e){return new Blob([e.data])})}):o.push({error:('The ffmpeg exec returned an empty result for file "'+r.name+'". This may be caused by a runtime error,\n\t\t\ta bad input, corrupted file, wrong or no arguments, or bad network connection. Check the stdout for details.').replace(/\s\s+/g," "),stdout:a})}),o.length?send("error",_extends({args:t},o[0])):postMessage({result:s,stdout:a,type:"done"})}send("loading",{}),importScripts("./ffmpeg.js"),self.onmessage=function(e){return execute(e.data)},self.onerror=function(e){return send("error",e)},self.onmessageerror=function(e){return send("error",e)},send("ready",{});