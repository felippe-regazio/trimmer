{"version":3,"sources":["context/reducer.tsx","context/index.tsx","i18n/locales/index.tsx","i18n/locales/en.tsx","i18n/locales/pt-BR.tsx","resources/script/utils.tsx","i18n/index.tsx","components/Logo/index.tsx","components/Loading/index.tsx","components/CutterSteps/selectFiles.jsx","components/CutterSteps/selectAction.jsx","components/CutterSteps/selectTime.jsx","components/CutterSteps/processFiles.jsx","components/CutterSteps/index.jsx","components/VideoCard/index.tsx","components/ShowResults/index.tsx","components/CutterForm/index.tsx","views/Home/index.tsx","components/AboutToggler/index.tsx","components/LangToggler/index.tsx","components/UpperHeader/index.tsx","App.tsx","index.tsx"],"names":["Reducer","state","action","type","payload","initialState","ffmpeg","formData","processed","loading","processors","supported","Context","createContext","Store","children","useReducer","dispatch","Provider","value","translation","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","size","parseFloat","pow","toFixed","label","processFile","file","data","Promise","resolve","reject","processorArgs","files","on","done","error","trim","startTime","endTime","split","chunkSize","download","name","blobUrl","saveAs","i18n","use","initReactI18next","init","resources","fallbackLng","lng","fromStorage","window","localStorage","getItem","fromNavigator","navigator","language","toLowerCase","getDefaultLocale","interpolation","escapeValue","LogoWrapper","styled","div","Logo","props","Typography","variant","component","gutterBottom","subtitle","Holder","LoadingDonut","Loading","ButtonWrapper","ListWrapper","SelectFile","t","useTranslation","maxFileSize","addToast","useToasts","useState","setFiles","addFiles","filesArray","Array","from","some","autoDismiss","appearance","Button","color","accept","onChange","e","target","hidden","multiple","List","map","index","Fragment","ListItem","primary","ListItemIcon","Theaters","ListItemText","secondary","style","ListItemSecondaryAction","onClick","newArr","splice","deleteItem","IconButton","edge","aria-label","length","Divider","Centered","SelectAction","setAction","ucFirst","str","charAt","toUpperCase","slice","FormControl","RadioGroup","event","FormControlLabel","control","Radio","InputWrapper","InputTime","InputLabel","mask","maskChar","alwaysShowMask","Input","SelectTime","useContext","store","willTrim","ProcessFiles","selectFiles","selectAction","selectTime","VideoWrapper","Actions","VideoCard","Card","src","url","controls","CardActions","Wrapper","Toolbar","ToolBarInner","ActionRow","Results","CardsHolder","Stats","ShowResults","videos","expanded","setExpanded","item","Accordion","square","panel","newExpanded","AccordionSummary","expandIcon","Chip","avatar","Avatar","blobs","forEach","b","AccordionDetails","videoUrl","WrapperDiv","ContentDiv","Controls","TextMobileStepper","theme","useTheme","activeStep","setActiveStep","maxSteps","steps","form","document","forms","cutterform","isPageLoading","handleNext","prevActiveStep","querySelector","serialize","hash","empty","showValidationErrors","errors","processData","a","entries","then","proc","limit","filesProcessedStr","result","substr","filesRemainingStr","push","catch","handleProcessError","reference","allFilesProcessed","console","dynamicUrlList","URL","createObjectURL","MobileStepper","position","nextButton","disabled","direction","KeyboardArrowLeft","KeyboardArrowRight","backButton","id","onSubmit","preventDefault","timeInfo","buildSubmitData","validation","Date","parse","valid","Set","validateSubmitData","step","Home","Container","maxWidth","AboutRoot","AboutAside","AboutHeader","AboutContent","AboutToggler","showAbout","setShowAbout","toggleAbout","Info","fontSize","data-visible","href","rel","LangTogglerRoot","LangToggler","React","anchorEl","setAnchorEl","handleClose","setLanguage","lang","setItem","changeLanguage","Language","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","UpperHeaderRoot","UpperHeader","className","App","useEffect","FFMPEGClient","worker","location","replace","notSupported","ready","FFMPEGClientProcessors","basename","path","ReactDOM","render","StrictMode","CssBaseline","autoDismissTimeout","getElementById"],"mappings":"6LAaeA,EAVC,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,2BACFF,GACAC,EAAOE,WCJZC,EAAoB,CACxBC,OAAQ,GACRC,SAAU,GACVC,UAAW,GACXC,SAAS,EACTC,WAAY,GACZC,WAAW,GAcAC,EAAUC,wBAAcR,GACtBS,EAXD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAA4B,EACfC,qBAAWhB,EAASK,GADL,mBACnCJ,EADmC,KAC5BgB,EAD4B,KAG3C,OACE,cAACL,EAAQM,SAAT,CAAkBC,MAAO,CAAElB,EAAOgB,GAAlC,SACGF,K,QChBQ,GACb,GCJa,CACbK,YAAa,CACX,GAAM,KACN,GAAM,KACN,KAAQ,OACR,KAAQ,OACR,MAAS,QACT,MAAS,QACT,QAAW,UACX,QAAW,WACX,KAAQ,OACR,MAAS,QACT,SAAY,WACZ,QAAW,UACX,QAAW,UACX,eAAkB,sBAClB,qBAAwB,8BACxB,WAAc,aACd,iBAAoB,oBACpB,cAAiB,iBACjB,eAAkB,kBAClB,aAAgB,gBAChB,UAAa,aACb,QAAW,WACX,UAAa,aACb,YAAe,eACf,aAAgB,gBAChB,eAAkB,kBAClB,YAAe,eACf,YAAe,iDACf,wBAA2B,mCAC3B,qBAAwB,oDAExB,6BAA+B,oJAG/B,SAAW,kMAIX,4BAA+B,+BAC/B,2BAA8B,iCAC9B,yBAA4B,8BAC5B,iCAAoC,uDDtCtC,QELa,CACbA,YAAa,CACX,GAAM,SACN,GAAM,MACN,KAAQ,WACR,KAAQ,aACR,MAAS,QACT,MAAS,SACT,QAAW,YACX,QAAW,cACX,KAAQ,SACR,MAAS,SACT,SAAY,SACZ,QAAW,YACX,QAAW,UACX,eAAkB,oBAClB,qBAAwB,8BACxB,WAAc,eACd,iBAAoB,wBACpB,cAAiB,qBACjB,eAAkB,qBAClB,aAAgB,qBAChB,UAAa,YACb,QAAW,MACX,UAAa,qBACb,YAAe,qBACf,aAAgB,qBAChB,eAAkB,mBAClB,YAAe,cACf,YAAe,+CACf,wBAA2B,gDAC3B,qBAAwB,uDAExB,6BAA+B,wLAG/B,SAAW,yNAIX,4BAA+B,uCAC/B,2BAA8B,0CAC9B,yBAA4B,qCAC5B,iCAAoC,wE,gBCzCjC,SAASC,EAAYC,GAAsC,IAAvBC,EAAsB,uDAAX,EACpD,GAAc,IAAVD,EACF,MAAO,UAGT,IAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5DC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIR,GAASM,KAAKE,IAAIN,IAC1CO,EAAOC,YAAaV,EAAQM,KAAKK,IAAIT,EAAGG,IAAIO,QAAQT,IACpDU,EAAQT,EAAMC,GAEpB,MAAM,GAAN,OAAWI,EAAX,YAAmBI,GA0Cd,SAASC,EAAT,GAAwE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,KAAM5B,EAAoC,EAApCA,WACxC,OAAO,IAAI6B,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgB,CACpBC,MAAO,CAAEN,GACTO,GAAI,CACFC,KAAML,EACNM,MAAOL,IAIS,SAAhBH,EAAKpC,QACPQ,EAAWqC,KAAKT,EAAKU,UAAWV,EAAKW,QAASP,GAG5B,UAAhBJ,EAAKpC,QACPQ,EAAWwC,MAAMZ,EAAKa,UAAWT,MAKhC,SAASU,EAASC,EAAcC,GACrC,OAAOC,iBAAOD,EAASD,GCzEzBG,IACGC,IAAIC,KACJC,KAAK,CACJC,YACAC,YAAa,KACbC,ID2EG,WACL,IAAMC,EAAcC,OAAOC,aAAaC,QAAQ,iBAC1CC,EAAgBC,WAAaA,UAAUC,SAE7C,OAAIN,IAIAI,EAGqC,OAFjBC,UAAUC,SAASnB,MAAM,KAAK,GAE/BoB,cAAyB,QAAU,UAH1D,GCnFOC,GACLC,cAAe,CAAEC,aAAa,KAGnBjB,EAAf,EAAeA,I,4kBCXf,IAAMkB,EAAcC,IAAOC,IAAV,KAiCF,SAASC,EAAMC,GAC5B,OACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMC,cAAY,EAArD,SACE,eAACR,EAAD,WACE,yCACA,mCAAGI,EAAMK,UAAY,6BAAKL,EAAMK,kB,0eCvCxC,IAAMC,EAAST,IAAOC,IAAV,KAINS,EAAeV,IAAOC,IAAV,KAgBH,SAASU,IACtB,OACE,cAACF,EAAD,UACE,cAACC,EAAD,M,0XCLN,IAAME,EAAgBZ,IAAOC,IAAV,KAKbY,GAAcb,IAAOC,IAAV,KAIjB,SAASa,KAA2B,IAC1BC,EAAMC,cAAND,EACFE,EAAc,UACZC,EAAaC,sBAAbD,SAHyB,EAILE,mBAAS,IAJJ,mBAIzBpD,EAJyB,KAIlBqD,EAJkB,KAc3BC,EAAW,SAAAtD,GACf,IAAMuD,EAAaC,MAAMC,KAAKzD,GACLuD,EAAWG,MAAK,SAAAhE,GAAI,OAAIA,EAAKN,KAAO6D,MAT7DC,EAAS,GAAD,OAAKH,EAAE,2BAAP,YAAuCrE,EAAYuE,GAAnD,kBACLF,EAAE,iCAAoC,CACvCY,aAAa,EACbC,WAAY,YAUdP,EAASE,IAUX,OACE,qCACE,cAACX,EAAD,UACE,eAACiB,EAAA,EAAD,CAAQxB,QAAQ,YAAYyB,MAAM,UAAUxB,UAAU,QAAtD,UACE,uBAAO5B,KAAK,QAAQlD,KAAK,OAAOuG,OAAO,UAAUC,SAAW,SAAAC,GAAC,OAAIX,EAASW,EAAEC,OAAOlE,QAASmE,QAAM,EAACC,UAAQ,IAC1GrB,EAAE,qBAIP,cAACF,GAAD,UACE,cAACwB,EAAA,EAAD,UACGrE,EAAMsE,KAAI,SAAC5E,EAAM6E,GAAP,OACT,eAAC,IAAMC,SAAP,WACE,eAACC,EAAA,EAAD,CAAUC,QAAQ,OAAlB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAGF,cAACC,EAAA,EAAD,CACEf,MAAM,UACNY,QAAShF,EAAKgB,KACdoE,UACE,cAAC1C,EAAA,EAAD,CAAY2C,MAAO,CAAEjB,MAAOpE,EAAKN,KAAO6D,EAAc,UAAY,WAAlE,SACGvE,EAAYgB,EAAKN,UAIxB,cAAC4F,EAAA,EAAD,CAAyBC,QAAS,kBAlC7B,SAAAV,GACjB,IAAMW,EAAM,YAAQlF,GACpBkF,EAAOC,OAAOZ,EAAO,GAErBlB,EAAS6B,GA8B2CE,CAAWb,IAAnD,SACE,cAACc,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,SAAlC,SACE,cAAC,IAAD,WAKLhB,IAAUvE,EAAMwF,OAAS,GAAK,cAACC,EAAA,EAAD,CAASnD,UAAU,SAtB/BiC,aA+BlB,qBAACzB,GAAD,I,wJC9Ff,IAAM4C,GAAW1D,IAAOC,IAAV,MAKd,SAAS0D,KAA6B,IAC5B5C,EAAMC,cAAND,EAD2B,EAEPK,mBAAS,QAFF,mBAE5B7F,EAF4B,KAEpBqI,EAFoB,KAQ7BC,EAAU,SAACC,GACf,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,IAGjD,OACE,cAACP,GAAD,UACE,cAACQ,GAAA,EAAD,CAAa5D,UAAU,WAAvB,SACE,eAAC6D,GAAA,EAAD,CAAYzF,KAAK,SAASlC,MAAOjB,EAAQyG,SAX1B,SAACoC,GACpBR,EAAUQ,EAAMlC,OAAO1F,QAUnB,UACE,cAAC6H,GAAA,EAAD,CAAkB7H,MAAM,OAAO8H,QAAS,cAACC,GAAA,EAAD,IAAW/G,MAAOqG,EAAQ9C,EAAE,WACpE,cAACsD,GAAA,EAAD,CAAkB7H,MAAM,QAAQ8H,QAAS,cAACC,GAAA,EAAD,IAAW/G,MAAOqG,EAAQ9C,EAAE,mBAOhE,qBAAC4C,GAAD,I,kfC9Bf,IAAMlD,GAAST,IAAOC,IAAV,MAUNuE,GAAexE,IAAOC,IAAV,MAmBlB,SAASwE,GAAUtE,GACjB,OACE,eAACqE,GAAD,WACE,cAACE,GAAA,EAAD,UAAavE,EAAM3C,QAEnB,cAAC,KAAD,CAAWmH,KAAK,WAAWC,SAAS,IAAIC,gBAAgB,EAAxD,SACG,kBAAM,cAACC,GAAA,EAAD,CAAOpG,KAAMyB,EAAMzB,aAMlC,SAASqG,KAA2B,IAC1BhE,EAAMC,cAAND,EADyB,EAEfiE,qBAAW/I,GAArBgJ,EAFyB,oBAG3BC,EAAWD,EAAMrJ,UAAsC,SAA1BqJ,EAAMrJ,SAASL,OAElD,OACE,eAAC,GAAD,WACE,cAACkJ,GAAD,CAAW/F,KAAK,YAAYlB,MAAe,UAAMuD,EAAdmE,EAAgB,YAAuB,aAA/B,OAE1CA,GAAY,cAACT,GAAD,CAAW/F,KAAK,UAAUlB,MAAK,UAAKuD,EAAE,WAAP,UAKnC,qBAACgE,GAAD,I,sICxDf,IAAMtE,GAAST,IAAOC,IAAV,MAOZ,SAASkF,KAA6B,IAC5BpE,EAAMC,cAAND,EAD2B,EAEjBiE,qBAAW/I,GAFM,sBAGUL,SAArCL,EAH2B,EAG3BA,OAAQ8C,EAHmB,EAGnBA,UAAWC,EAHQ,EAGRA,QAE3B,OACE,eAAC,GAAD,WACE,8BACc,SAAX/C,GAAqB,qCAAGwF,EAAE,WAAL,IAAiB,iCAASA,EAAE,UAA5B,IAA+CA,EAAE,kBAAjD,IAAoE,iCAAS1C,IAA7E,IAAkG0C,EAAE,MAApG,IAA2G,iCAASzC,OAC9H,UAAX/C,GAAsB,qCAAGwF,EAAE,WAAL,IAAiB,iCAASA,EAAE,WAA5B,IAAgDA,EAAE,wBAAlD,IAA2E,iCAAS1C,UAG7G,cAACwD,EAAA,EAAD,CAAQxB,QAAQ,YAAYyB,MAAM,UAAUtG,KAAK,SAAjD,SAA2DuF,EAAE,gBAKpD,ICzBA,IACbqE,GACAC,GACAC,GDsBa,cAACH,GAAD,K,gdEnBf,IAAMI,GAAevF,IAAOC,IAAV,MAQZuF,GAAUxF,IAAOC,IAAV,MAaE,SAASwF,GAAUtF,GAAqC,IAC7DY,EAAMC,cAAND,EAER,OACE,eAAC2E,GAAA,EAAD,WACE,cAACH,GAAD,UACE,uBAAOI,IAAKxF,EAAMyF,IAAKC,UAAQ,MAGjC,cAACC,GAAA,EAAD,UACE,eAACN,GAAD,WACE,cAACpF,EAAA,EAAD,oBACMD,EAAMoC,MAAQ,EADpB,YACyBpC,EAAMzB,QAG/B,cAACmD,EAAA,EAAD,CAAQzE,KAAK,QAAQ0E,MAAM,UAAUmB,QAAS,kBAAMxE,EAAS,GAAD,OAAI0B,EAAMoC,MAAQ,EAAlB,YAAuBpC,EAAMzB,MAAQyB,EAAMyF,MAAvG,SACG7E,EAAE,sB,kzDC9Bf,IAAMgF,GAAU/F,IAAOC,IAAV,MAkBP+F,GAAUhG,IAAOC,IAAV,MAUPgG,GAAejG,IAAOC,IAAV,MAWZiG,GAAYlG,IAAOC,IAAV,MAYTkG,GAAUnG,IAAOC,IAAV,MAIPmG,GAAcpG,IAAOC,IAAV,MAcXoG,GAAQrG,IAAOC,IAAV,MAiBI,SAASqG,KAA4B,IAAD,EACzCvF,EAAMC,cAAND,EADyC,EAErBiE,qBAAW/I,GAFU,mBAEzCgJ,EAFyC,KAElC3I,EAFkC,KAG3CiK,EAAStB,EAAMpJ,UAH4B,EAIfuF,mBAAQ,UAACmF,EAAO,UAAR,aAAC,EAAW7H,MAJL,mBAIzC8H,EAJyC,KAI/BC,EAJ+B,KAkBjD,OACE,eAACV,GAAD,WACE,cAACC,GAAD,UACE,eAACC,GAAD,WACE,6BAA+B,SAA1BhB,EAAMrJ,SAASL,OAAoBwF,EAAE,eAAiBA,EAAE,kBAC7D,cAACc,EAAA,EAAD,CAAQC,MAAM,UAAUmB,QAAS,WAZvC3G,EAAS,CAAEd,KAAM,cAAeC,QAAS,CAAEI,UAAW,OAYhD,SAAgD,iCAASkF,EAAE,kBAI/D,cAACoF,GAAD,UACGI,EAAOjE,KAAI,SAACoE,EAAMnE,GACjB,OACE,eAACoE,GAAA,EAAD,CAAuBC,QAAM,EAACJ,SAAUA,IAAaE,EAAKhI,KAAMsD,UAxB5C6E,EAwB2EH,EAAKhI,KAxBtE,SAAC0F,EAAO0C,GAC9CL,IAAYK,GAAcD,KAuBlB,UACE,cAACE,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC5G,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACE,cAAC4G,GAAA,EAAD,CAAMnF,MAAM,UAAUtE,MAAOkJ,EAAKhI,KAAMwI,OAAQ,cAACC,GAAA,EAAD,UAAST,EAAKU,MAAM5D,eAIxE,eAAC0C,GAAD,WACE,8BACE,eAACG,GAAD,WACE,gCAAK,mCAAStF,EAAE,WAAX,OAAL,IAAuCA,EAAEkE,EAAMrJ,SAASL,WACxD,gCAAK,mCAASwF,EAAE,aAAX,OAAL,IAAyCkE,EAAMrJ,SAASyC,aACxD,gCAAK,mCAAS0C,EAAE,kBAAX,OAAL,IAA8C2F,EAAKU,MAAM5D,eAI7D,cAAC3B,EAAA,EAAD,CAAQoB,QAAS,kBAhCVvE,EAgC4BgI,EAAKhI,UAAMgI,EAAKU,MA/BzDC,SAAQ,SAACC,EAAGtK,GAAJ,OAAUyB,EAAS,GAAD,OAAIzB,EAAI,EAAR,YAAa0B,GAAQ4I,MADnC,IAAC5I,GAgCP,SAA4DqC,EAAE,oBAGhE,cAACwG,GAAA,EAAD,UACE,cAACnB,GAAD,UACGM,EAAKU,MAAM9E,KAAI,SAACkF,EAAUjF,GACzB,OACE,cAACkD,GAAD,CAAuBG,IAAK4B,EAAU9I,KAAMgI,EAAKhI,KAAM6D,MAAOA,GAA9CA,YAvBVA,GAxBG,IAACsE,U,wlBCjGhC,IAAMY,GAAazH,IAAOC,IAAV,MAIVyH,GAAa1H,IAAOC,IAAV,MAKV0H,GAAW3H,IAAOC,IAAV,MAeC,SAAS2H,KACtB,IAAMC,EAAQC,eACN/G,EAAMC,cAAND,EACAG,EAAaC,sBAAbD,SAH+C,EAIjBE,mBAAS,GAJQ,mBAI/C2G,EAJ+C,KAInCC,EAJmC,OAK3BhD,qBAAW/I,GALgB,mBAK/CgJ,EAL+C,KAKxC3I,EALwC,KAOjD2L,EAAWC,GAAM1E,OACjB2E,EAAOC,SAASC,MAAMC,WAEtBC,EAAgB,SAAAjN,GACpBgB,EAAS,CAAEd,KAAM,cAAeC,QAAS,CAAEK,QAASR,MAGhDkN,EAAa,WACjBR,GAAc,SAACS,GAAD,OAAoBA,EAAiB,KAEnDnM,EAAS,CACPd,KAAM,cACNC,QAAS,CACPG,SAAS,aACPoC,MAAOwD,MAAMC,KAAK0G,EAAOA,EAAKO,cAAc,oBAAoB1K,MAAO,KACpE2K,KAAUR,EAAM,CAAES,MAAM,EAAMC,OAAO,SA2B1CC,EAAuB,SAAAC,GAC3BA,EAAO1B,SAAQ,SAAAlJ,GACb,IACE+C,EAASH,EAAE5C,GAAQ,CACjBwD,aAAa,EACbC,WAAY,UAEd,eAIAoH,EAAW,uCAAG,WAAMrL,GAAN,qBAAAsL,EAAA,sDACZpN,EAAY,GAElB0M,GAAc,GAEdrH,EAASH,EAAE,oBAAqB,CAC9BY,aAAa,EACbC,WAAY,YAPI,cAkBYjE,EAAKK,MAAMkL,WAlBvB,aAAAD,EAAA,sCAAAA,EAAA,sFAkBL1G,EAlBK,KAkBE7E,EAlBF,cAmBVD,EAAY,CAChBC,OACAC,OACA5B,WAAYkJ,EAAMlJ,aAEjBoN,MAAK,SAAAC,GACJ,IXzCgBC,EAAevF,EWyCzBwF,EAAiB,UAAMvI,EAAE,iBAAR,eXzCPsI,EWyC8C,IXzC/BvF,EWyCmCsF,EAAKG,OAAO,GAAG7K,MXxC9E8E,OAAS6F,EAAb,UAAwBvF,EAAI0F,OAAO,EAAGH,GAAtC,OAAoDvF,GWwC5B,MACjB2F,EAAiB,UAAM1I,EAAE,kBAAR,aAA8BpD,EAAKK,MAAMwF,QAAUjB,EAAQ,IAElFrB,EAAS,GAAD,OAAIoI,EAAJ,YAAyBG,GAAqB,CACpD9H,aAAa,EACbC,WAAY,YAGd/F,EAAU6N,KAAKN,EAAKG,WAErBI,OAAM,SAAAxL,GACLyL,EAAmB,CAAEC,UAAW1L,EAAOT,YApC3B,2QAwClBoM,EAAkBjO,GAClB0M,GAAc,GAzCI,gEAAH,sDA4CXqB,EAAqB,SAAAzL,GACzB4L,QAAQ5L,MAAMA,EAAM0L,WAEpB3I,EAAS,GAAD,OAAIH,EAAE,wBAAN,aAAkC5C,EAAMT,KAAKgB,KAA7C,KAAsD,CAC5DiD,aAAa,EACbC,WAAY,WAIVkI,EAAoB,SAAAnM,GACxB,IAAMqM,EAAiBrM,EACpB2E,KAAI,SAAAoE,GAAI,MAAK,CAAEhI,KAAMgI,EAAK,GAAGhI,KAAM0I,MAAOV,EAAK,GAAGU,UAClD9E,KAAI,SAAAoE,GAGH,OAFAA,EAAKU,MAAQV,EAAKU,MAAM9E,KAAI,SAAAgF,GAAC,OAAIjI,OAAO4K,IAAIC,gBAAgB5C,MAErDZ,KAGXpK,EAAS,CAAEd,KAAM,cAAeC,QAAS,CAAEI,UAAWmO,MAGxD,OACE,eAACvC,GAAD,WACE,cAACE,GAAD,UACE,cAACwC,GAAA,EAAD,CACEjC,MAAOD,EACPmC,SAAS,SACTrC,WAAYA,EACZsC,WACE,eAACxI,EAAA,EAAD,CACEzE,KAAK,QACL6F,QAASuF,EACT8B,SAAUvC,IAAeE,EAAW,EAHtC,UAKGlH,EAAE,QACkB,QAApB8G,EAAM0C,UACL,cAACC,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,OAINC,WACE,eAAC7I,EAAA,EAAD,CAAQzE,KAAK,QAAQ6F,QAvHZ,WACjB+E,GAAc,SAACS,GAAD,OAAoBA,EAAiB,MAsHD6B,SAAyB,IAAfvC,EAApD,UACuB,QAApBF,EAAM0C,UACL,cAACE,GAAA,EAAD,IAEA,cAACD,GAAA,EAAD,IAEDzJ,EAAE,eAMX,sBAAM4J,GAAG,aAAapP,OAAO,IAAIqP,SA/HhB,SAAA3I,GAGnB,GAFAA,EAAE4I,iBAEE9C,IAAeE,EAAW,EAC5B,OAAOO,IAGT,IAAM7K,EX1DH,SAAyB/B,GAC9B,IAAMkP,EAA+B,SAApBlP,EAASL,OACtB,CAAE8C,UAAWzC,EAASyC,UAAWC,QAAS1C,EAAS0C,SACnD,CAAEE,UAAW5C,EAASyC,WAE1B,OAAO,aACLL,MAAOpC,EAASoC,MAChBzC,OAAQK,EAASL,QACduP,GWkDUC,CAAgB9F,EAAMrJ,UAC7BoP,EX1CH,SAA4BrN,GACjC,IAAMoL,EAAS,GACTzK,EAAU2M,KAAKC,MAAL,qBAAyBvN,EAAKW,UACxCD,EAAY4M,KAAKC,MAAL,qBAAyBvN,EAAKU,YAUhD,OARCV,EAAKK,MAAMwF,QAAUuF,EAAOW,KAAK,+BAClB,UAAhB/L,EAAKpC,SAAuBoC,EAAKa,WAAauK,EAAOW,KAAK,8BAEtC,SAAhB/L,EAAKpC,UACN+C,GAAWyK,EAAOW,KAAK,4BACvBpL,GAAWD,GAAc0K,EAAOW,KAAK,qCAGjC,CAAEyB,MAAyB,IAAlBpC,EAAOvF,OAAcuF,OAAQ,IAAIqC,IAAIrC,IW6BhCsC,CAAmB1N,GAEjCqN,EAAWG,MAGdnC,EAAYrL,GAFZmL,EAAqBkC,EAAWjC,SAoHhC,SACGb,GAAM5F,KAAI,SAACgJ,EAAM/I,GAAP,OACT,cAACmF,GAAD,CAAYvF,OAAQI,IAAUwF,EAA9B,SACIuD,GAD2C/I,QAMlD0C,EAAMpJ,UAAU2H,OAAS,GAAK,cAAC8C,GAAD,OCpMtB,SAASiF,KAAqB,IACnCxK,EAAMC,cAAND,EADkC,EAExBiE,qBAAW/I,GAArBgJ,EAFkC,oBAI1C,OACE,eAACuG,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACvL,EAAD,CAAMM,SAAUO,EAAE,iBAEjBkE,EAAMnJ,SAAW,cAAC6E,EAAD,KAChBsE,EAAMnJ,SAAWmJ,EAAMjJ,WAAa,cAAC,GAAD,O,s2BCX5C,IAAM0P,GAAY1L,IAAOC,IAAV,MAQT0L,GAAa3L,IAAOC,IAAV,MAuBV2L,GAAc5L,IAAOC,IAAV,MASX4L,GAAe7L,IAAOC,IAAV,MAIH,SAAS6L,KAA6B,IAC3C/K,EAAMC,cAAND,EAD0C,EAEdK,oBAAS,GAFK,mBAE1C2K,EAF0C,KAE/BC,EAF+B,KAI5CC,EAAc,WAClBD,GAAcD,IAGhB,OACE,eAACL,GAAD,WACE,cAACQ,GAAA,EAAD,CAAMC,SAAS,QAAQlJ,QAAS,kBAAMgJ,OAEtC,eAACN,GAAD,CAAYS,eAAcL,EAA1B,UACE,cAACH,GAAD,UACE,eAACxL,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,IAAnC,UACGS,EAAE,SAEH,cAACc,EAAA,EAAD,CAAQzE,KAAK,QAAQ6F,QAAS,kBAAMgJ,KAAelJ,MAAO,CAACjB,MAAO,gBAAlE,SACGf,EAAE,gBAKT,eAAC8K,GAAD,WACE,4BAAI9K,EAAE,cAAgB,uBAEtB,+BACE,+BACE,mBAAGsL,KAAK,6CAA6CnK,OAAO,SAASoK,IAAI,aAAzE,qBAAiG,uBAChGvL,EAAE,MAFL,IAEY,mBAAGsL,KAAK,sCAAsCnK,OAAO,SAASoK,IAAI,aAAlE,6BAAkG,uBAAK,0BAEnH,+BACE,mBAAGD,KAAK,sDAAsDnK,OAAO,SAASoK,IAAI,aAAlF,2BAAgH,uBAC7GvL,EAAE,MAFP,IAEc,mBAAGsL,KAAK,sCAAsCnK,OAAO,SAASoK,IAAI,aAAlE,6BAAkG,uBAAK,0BAErH,+BACE,mBAAGD,KAAK,sCAAsCnK,OAAO,SAASoK,IAAI,aAAlE,4BAAiG,uBAChGvL,EAAE,MAFL,IAEY,mBAAGsL,KAAK,4BAA4BnK,OAAO,SAASoK,IAAI,aAAxD,4BAAuF,uBAAK,sC,gLCjFpH,IAAMC,GAAkBvM,IAAOC,IAAV,MAQN,SAASuM,KAA4B,IAAD,EAC7BxL,cAAZD,EADyC,EACzCA,EAAGlC,EADsC,EACtCA,KADsC,EAEf4N,IAAMrL,SAAS,MAFA,mBAEzCsL,EAFyC,KAE/BC,EAF+B,KAQ3CC,EAAc,WAClBD,EAAY,OAGRE,EAAc,SAACC,GAKnB,OAJAF,IAEAvN,OAAOC,aAAayN,QAAQ,gBAAiBD,GAEtCjO,EAAKmO,eAAeF,IAG7B,OACE,eAACP,GAAD,WACE,cAACU,GAAA,EAAD,CAAUd,SAAS,QAAQe,gBAAc,eAAeC,gBAAc,OAAOlK,QAlB7D,SAACmB,GACnBuI,EAAYvI,EAAMgJ,kBAmBhB,eAACC,GAAA,EAAD,CACE1C,GAAG,eACH+B,SAAUA,EACVY,aAAW,EACXC,KAAMC,QAAQd,GACde,QAASb,EALX,UAOE,cAACc,GAAA,EAAD,CAAUzK,QAAS,kBAAM4J,EAAY,OAArC,SAA6C9L,EAAE,aAC/C,cAAC2M,GAAA,EAAD,CAAUzK,QAAS,kBAAM4J,EAAY,UAArC,SAAgD9L,EAAE,sB,0WC1C1D,IAAM4M,GAAkB3N,IAAOC,IAAV,MAqBN,SAAS2N,KACtB,OACE,mCACE,cAACD,GAAD,UACE,sBAAKE,UAAU,uBAAf,UACE,cAACrB,GAAD,IACA,cAACV,GAAD,W,uBChBK,SAASgC,KAAoB,IAAD,EAClB9I,qBAAW/I,GAAxBK,EAD+B,oBAgCzC,OA7BAyR,qBAAU,WACR,IAAMpS,EAAS,IAAI0D,OAAO2O,aAAa,CACrCC,OAAO,GAAD,OAAK5O,OAAO6O,SAAS7B,KAAK8B,QAAQ,MAAO,IAAzC,6CACNlQ,GAAI,CACFmQ,aAAc,WACZ9R,EAAS,CACPd,KAAM,cACNC,QAAS,CACPE,QAAQ,EACRG,SAAS,EACTE,WAAW,MAIjBqS,MAAO,WACL/R,EAAS,CACPd,KAAM,cACNC,QAAS,CACPE,OAAQA,EACRG,SAAS,EACTE,WAAW,EACXD,WAAY,IAAIuS,uBAAuB3S,YAMhD,IAGD,eAAC,KAAD,CAAY4S,SAAS,IAArB,UACE,cAACX,GAAD,IAEA,cAAC,KAAD,UACE,cAAC,KAAD,CAAOY,KAAK,IAAZ,SACE,cAACjD,GAAD,W,4BC3CVkD,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACC,GAAA,EAAD,IAEA,cAAC,EAAD,UACE,cAAC,gBAAD,CAAeC,mBAAoB,IAAnC,SACE,cAACf,GAAD,WAIN1F,SAAS0G,eAAe,W","file":"static/js/main.f396a07d.chunk.js","sourcesContent":["type State = typeof initialState;\ntype Action = ActionType<typeof actions>;\n\nconst Reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'updateStore':\n      return {\n        ...state,\n        ...action.payload\n      };\n  }\n};\n\nexport default Reducer;","import Reducer from './reducer'\nimport React, {createContext, useReducer} from 'react'\n\n/* eslint-disable-next-line */\nconst initialState: any = {\n  ffmpeg: {},\n  formData: {},\n  processed: [],\n  loading: true,\n  processors: {},\n  supported: true,\n};\n\n/* eslint-disable-next-line */\nconst Store = ({ children }): JSX.Element => {\n  const [ state, dispatch ] = useReducer(Reducer, initialState);\n  \n  return (\n    <Context.Provider value={[ state, dispatch ]}>\n      {children}\n    </Context.Provider>\n  );\n};\n  \nexport const Context = createContext(initialState);\nexport default Store;","import en from './en.tsx'\nimport ptBR from './pt-BR.tsx'\n\nexport default {\n  'en': en,\n  'pt-BR': ptBR\n}","export default {\n  translation: {\n    'to': 'to',\n    'by': 'by',\n    'back': 'Back',\n    'next': 'Next',\n    'about': 'About',\n    'close': 'Close',\n    'english': 'English',\n    'youWill': 'You will',\n    'trim': 'trim',\n    'slice': 'split',\n    'download': 'Download',\n    'process': 'Process',\n    'command': 'Command',\n    'yourVideosFrom': 'your vídeos from',\n    'yourVideosInChunksOf': 'your vídeos in chunks of',\n    'portuguese': 'Portuguese',\n    'processingVideos': 'Processing videos',\n    'fileProcessed': 'File processed',\n    'filesRemaining': 'Files remaining',\n    'chooseVideos': 'Choose Videos',\n    'startTime': 'Start time',\n    'endTime': 'End time',\n    'chunkSize': 'Chunk size',\n    'trimResults': 'Trim Results',\n    'sliceResults': 'Slice Results',\n    'filesGenerated': 'Files generated',\n    'downloadAll': 'Download All',\n    'appSubtitle': 'Quickly cut vídeos directly on your browser',\n    'youAddedFilesBiggerThan': 'You added some files bigger than',\n    'errorWhileProcessing': 'Sorry, but an error has occurred while processing',\n    \n    'thisCanBeHarmfulForSplitMode': `This can be harmful for split mode. If you gonna use the split mode,\n    avoid split big files concurrent to others or you can run out of memory`,\n    \n    'appAbout': `Trimmer is a simple online video cropper that doesn&apos;t need a backend. \n    It combines a Worker + ffmpeg.js + React to allow your browser to do\n    all that hard work without a server.`,\n\n    'submitErrorNoFilesToProcess': 'There is no files to process',\n    'submitErrorDefineChunkSize': 'You must define the chunk size',\n    'submitErrorNoZeroEndTime': 'The end time cannot be zero',\n    'submitErrorNoEndTimeOrEqualStart': 'End time cannot be smaller or equal the start time'\n  }\n}","export default {\n  translation: {\n    'to': 'até',\n    'by': 'por',\n    'back': 'Anterior',\n    'next': 'Próximo',\n    'about': 'Sobre',\n    'close': 'Fechar',\n    'english': 'Inglês',\n    'youWill': 'Você vai',\n    'trim': 'cortar',\n    'slice': 'fatiar',\n    'download': 'Baixar',\n    'process': 'Processar',\n    'command': 'Comando',\n    'yourVideosFrom': 'seus vídeos de',\n    'yourVideosInChunksOf': 'seus vídeos em fatias de',\n    'portuguese': 'Português',\n    'processingVideos': 'Processando vídeos',\n    'fileProcessed': 'Arquivo processado',\n    'filesRemaining': 'Arquivos pendentes',\n    'chooseVideos': 'Escolher Vídeos',\n    'startTime': 'Início',\n    'endTime': 'Fim',\n    'chunkSize': 'Tamanho das fatias',\n    'trimResults': 'Resultado (cortes)',\n    'sliceResults': 'Resultado (fatias)',\n    'filesGenerated': 'Arquivos gerados',\n    'downloadAll': 'Baixar tudo',\n    'appSubtitle': 'Corte vídeos diretamente no seu navegador',\n    'youAddedFilesBiggerThan': 'Você adicionou alguns arquivos maiores que',\n    'errorWhileProcessing': 'Desculpe, mas um erro ocorreu ao processar o arquivo',\n    \n    'thisCanBeHarmfulForSplitMode': `Isso pode ser prejudicial para o modo de fatias. Se você vai usar este modo,\n    evite dividir arquivos grandes simultaneamente ou seu navegador poderá apresentar lentidão`,\n    \n    'appAbout': `Trimmer é um cortador de vídeo online que não precisa de back-end.\n    Ele combina um Worker + ffmpeg.js + React para permitir que seu navegador faça\n    todo o trabalho sem necessitar de um servidor.`,\n\n    'submitErrorNoFilesToProcess': 'Não há arquivos para processar',\n    'submitErrorDefineChunkSize': 'Você deve definir o tamanho da fatia',\n    'submitErrorNoZeroEndTime': 'O tempo final não pode ser zero',\n    'submitErrorNoEndTimeOrEqualStart': 'O tempo final não pode ser menor ou igual ao tempo de início'\n  }\n}","import { saveAs } from 'file-saver';\n\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  const size = parseFloat( (bytes / Math.pow(k, i)).toFixed(dm) );\n  const label = sizes[i];\n\n  return  `${size} ${label}`;\n}\n\nexport function buildSubmitData(formData: unknown): unknown {\n  const timeInfo = formData.action === 'trim' \n    ? { startTime: formData.startTime, endTime: formData.endTime } \n    : { chunkSize: formData.startTime };\n\n  return {\n    files: formData.files,\n    action: formData.action,\n    ...timeInfo\n  };\n}\n\ntype ValidationResult = {\n  valid: boolean,\n  errors: array<string>\n}\n\nexport function validateSubmitData(data: unknown): ValidationResult {\n  const errors = [];\n  const endTime = Date.parse(`01/01/1111 ${data.endTime}`);\n  const startTime = Date.parse(`01/01/1111 ${data.startTime}`);\n\n  !data.files.length && errors.push('submitErrorNoFilesToProcess');\n  data.action === 'slice' && !data.chunkSize && errors.push('submitErrorDefineChunkSize');\n\n  if (data.action === 'trim') {\n    !endTime && errors.push('submitErrorNoZeroEndTime');\n    (endTime <= startTime) && errors.push('submitErrorNoEndTimeOrEqualStart');\n  }\n\n  return { valid: errors.length === 0, errors: new Set(errors) }\n}\n\ntype ProcessArgs = {\n  file: File,\n  data: unknown,\n  processors: unknown\n};\n\nexport function processFile({ file, data, processors }: ProcessArgs): Promise {\n  return new Promise((resolve, reject) => {\n    const processorArgs = {\n      files: [ file ],\n      on: {\n        done: resolve,\n        error: reject\n      }    \n    };\n\n    if (data.action === 'trim') {\n      processors.trim(data.startTime, data.endTime, processorArgs);\n    }\n  \n    if (data.action === 'slice') {\n      processors.split(data.chunkSize, processorArgs);\n    }\n  });\n}\n\nexport function download(name: string, blobUrl: string): unknown {\n  return saveAs(blobUrl, name);\n}\n\nexport function truncate (limit: number, str: string): string {\n  return str.length > limit ? `${str.substr(0, limit)}...` : str;\n}\n\nexport function getDefaultLocale (): string {\n  const fromStorage = window.localStorage.getItem('trimmerLocale');\n  const fromNavigator = navigator && navigator.language;\n  \n  if (fromStorage) {\n    return fromStorage;\n  }\n  \n  if (fromNavigator) {\n    const shortLangName = navigator.language.split('-')[0];\n    \n    return shortLangName.toLowerCase() === 'pt' ? 'pt-BR' : 'en';\n  }\n}","import i18n from 'i18next'\nimport resources from './locales'\nimport { initReactI18next } from 'react-i18next'\nimport { getDefaultLocale } from '../resources/script/utils.tsx'\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    lng: getDefaultLocale(),\n    interpolation: { escapeValue: false },\n  });\n\nexport default i18n;","import styled from 'styled-components'\nimport { Typography } from '@material-ui/core';\n\nconst LogoWrapper = styled.div`\n  text-align: center;\n  margin-bottom: 72px;\n\n  h1 {\n    font-size: 1.6em;\n    margin-bottom: 8px;\n    display: inline-block;\n    color: var(--primary-color);\n    border-bottom: dashed 6px #dddddd;\n\n    @media screen and (max-width: 768px) {\n      font-size: 1.1em;\n    }\n  \n    @media screen and (max-width: 425px) {\n      font-size: .7em;\n      padding-bottom: 16px;\n    }\n  }\n\n  h2 {\n    color: #444444;\n    font-size: .25em;\n    letter-spacing: 2px;\n  }\n\n`;\n\ntype LogoProps = {\n  subtitle?: string\n}\n\nexport default function Logo (props: LogoProps): JSX.Element {\n  return (\n    <Typography variant=\"h1\" component=\"div\" gutterBottom>\n      <LogoWrapper>\n        <h1>Trimmer</h1>\n        <>{props.subtitle && <h2>{props.subtitle}</h2>}</>\n      </LogoWrapper>\n    </Typography>\n  )\n}","import styled from 'styled-components'\n\nconst Holder = styled.div`\n  text-align: center;\n`;\n\nconst LoadingDonut = styled.div`\n  width: 5rem;\n  height: 5rem;\n  display: block;\n  margin: 0 auto;\n  border-radius: 50%;\n  border: 0.3rem solid #f1f1f1;\n  border-top-color: var(--primary-color);\n  animation: 1.5s spin infinite linear;\n  border-bottom-color: var(--primary-color);\n\n  @keyframes spin {\n    to { transform: rotate(360deg) }\n  }  \n`;\n\nexport default function Loading (): JSX.Element {\n  return (\n    <Holder>\n      <LoadingDonut />\n    </Holder>\n  )\n}","import styled from 'styled-components'\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Theaters } from '@material-ui/icons/'\nimport { useToasts } from 'react-toast-notifications'\nimport { formatBytes } from '../../resources/script/utils.tsx'\n\nimport { \n  Button,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton \n} from '@material-ui/core'\n\nconst ButtonWrapper = styled.div`\n  text-align: center;\n  margin-bottom: 28px;\n`;\n\nconst ListWrapper = styled.div`\n  padding-bottom: 56px;\n`;\n\nfunction SelectFile(): JSX.Element {\n  const { t } = useTranslation();\n  const maxFileSize = 125829120;\n  const { addToast } = useToasts();\n  const [ files, setFiles ] = useState([]);\n\n  const warnFileSize = () => {\n    addToast(`${ t('youAddedFilesBiggerThan') } ${ formatBytes(maxFileSize) }.\n    ${ t('thisCanBeHarmfulForSplitMode') }`, { \n      autoDismiss: false,\n      appearance: 'warning'\n    });    \n  };\n\n  const addFiles = files => {\n    const filesArray = Array.from(files);\n    const mustWarnFileSize = filesArray.some(file => file.size > maxFileSize);\n\n    mustWarnFileSize && warnFileSize();\n\n    setFiles(filesArray);\n  };\n\n  const deleteItem = index => {\n    const newArr = [ ...files ]\n    newArr.splice(index, 1);\n\n    setFiles(newArr);\n  };\n\n  return (\n    <>\n      <ButtonWrapper>\n        <Button variant=\"contained\" color=\"primary\" component=\"label\">\n          <input name=\"files\" type=\"file\" accept=\"video/*\" onChange={ e => addFiles(e.target.files) } hidden multiple/>\n          {t('chooseVideos')}\n        </Button>\n      </ButtonWrapper>\n\n      <ListWrapper>\n        <List>\n          {files.map((file, index) => (\n            <React.Fragment key={index}>\n              <ListItem primary=\"Spam\">\n                <ListItemIcon>\n                  <Theaters/>\n                </ListItemIcon>\n              \n                <ListItemText \n                  color='primary'\n                  primary={file.name} \n                  secondary={\n                    <Typography style={{ color: file.size > maxFileSize ? '#ffab00' : '#aaaaaa' }}>\n                      {formatBytes(file.size)}\n                    </Typography>\n                  }/>\n\n                <ListItemSecondaryAction onClick={() => deleteItem(index)}>\n                  <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>              \n              </ListItem>\n\n              {index !== files.length - 1 && <Divider component=\"li\" />}\n            </React.Fragment>\n          ))}\n        </List>\n      </ListWrapper>\n    </>\n  )\n}\n\nexport default <SelectFile />","import { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst Centered = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nfunction SelectAction(): JSX.Element {\n  const { t } = useTranslation();\n  const [action, setAction] = useState('trim');\n\n  const handleChange = (event: SyntheticEvennt): void => {\n    setAction(event.target.value);\n  };\n\n  const ucFirst = (str: string): string => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return (\n    <Centered>\n      <FormControl component=\"fieldset\">\n        <RadioGroup name=\"action\" value={action} onChange={handleChange}>\n          <FormControlLabel value='trim' control={<Radio />} label={ucFirst(t('trim'))} />\n          <FormControlLabel value='slice' control={<Radio />} label={ucFirst(t('slice'))} />\n        </RadioGroup>\n      </FormControl>\n    </Centered>\n  )\n}\n\nexport default <SelectAction />","import styled from 'styled-components'\nimport InputMask from 'react-input-mask'\nimport { Context } from '../../context'\nimport { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { InputLabel, Input } from '@material-ui/core'\n\nconst Holder = styled.div`\n  width: 100%;\n  text-align: center;\n\n  input {\n    outline: none;\n    margin-top: 8px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  text-align: left;\n  margin: 28px 42px;\n  margin-top: 16px;\n  display: inline-block;\n  .react-time-picker__wrapper {\n    border: none;\n    font-size: 28px;\n    select {\n      display: none;\n    }\n  }\n`;\n\ntype InputTimeProps = {\n  name: string,\n  label: string\n}\n\nfunction InputTime(props: InputTimeProps): JSX.Element {\n  return (\n    <InputWrapper>\n      <InputLabel>{props.label}</InputLabel>\n\n      <InputMask mask='99:99:99' maskChar='0' alwaysShowMask={true}>\n        {() => <Input name={props.name} />}\n      </InputMask>\n    </InputWrapper>\n  )\n}\n\nfunction SelectTime(): JSX.Element {\n  const { t } = useTranslation();\n  const [ store ] = useContext(Context);\n  const willTrim = store.formData && store.formData.action === 'trim';\n\n  return (\n    <Holder>\n      <InputTime name='startTime' label={willTrim ? `${t('startTime')}:` : `${t('chunkSize')}:`} />\n      \n      {willTrim && <InputTime name='endTime' label={`${t('endTime')}:`} />}\n    </Holder>\n  )\n}\n\nexport default <SelectTime/>","import styled from 'styled-components'\nimport { useContext } from 'react'\nimport { Context } from '../../context'\nimport { Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst Holder = styled.div`\n  text-align: center;\n  p {\n    margin-bottom: 28px;\n  }\n`;\n\nfunction ProcessFiles(): JSX.Element {\n  const { t } = useTranslation();\n  const [ store ] = useContext(Context);\n  const { action, startTime, endTime } = store.formData;\n\n  return (\n    <Holder>\n      <p>\n        {action === 'trim' && <>{t('youWill')} <strong>{t('trim')}</strong> {t('yourVideosFrom')} <strong>{startTime}</strong> {t('to')} <strong>{endTime}</strong></>}\n        {action === 'slice' && <>{t('youWill')} <strong>{t('slice')}</strong> {t('yourVideosInChunksOf')} <strong>{startTime}</strong></>}\n      </p>\n\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">{t('process')}</Button>\n    </Holder>\n  )\n}\n\nexport default <ProcessFiles/>","import selectFiles from './selectFiles.jsx'\nimport selectAction from './selectAction.jsx'\nimport selectTime from './selectTime.jsx'\nimport processFiles from './processFiles.jsx'\n\nexport default [\n  selectFiles,\n  selectAction,\n  selectTime,\n  processFiles\n];","import styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { download } from '../../resources/script/utils.tsx'\nimport { Typography, Button, Card, CardActions } from '@material-ui/core';\n\ntype VideoCardProps = {\n  url: unknown,\n  name: string,\n  index: number,\n}\n\nconst VideoWrapper = styled.div`\n  width: 100%;\n\n  video {\n    width: 100%;\n  }\n`;\n\nconst Actions = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  p.MuiTypography-root {\n    overflow: hidden;\n    margin-right: 16px;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport default function VideoCard(props: VideoCardProps): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <VideoWrapper>\n        <video src={props.url} controls></video>\n      </VideoWrapper>\n      \n      <CardActions>\n        <Actions>\n          <Typography>\n            {`${props.index + 1}_${props.name}`}\n          </Typography>\n\n          <Button size=\"small\" color=\"primary\" onClick={() => download(`${props.index + 1}_${props.name}`, props.url)}>\n            {t('download')}\n          </Button>\n        </Actions>\n      </CardActions>\n    </Card>\n  )\n}","import { useContext, useState } from 'react'\nimport { Context } from '../../context'\nimport { useTranslation } from 'react-i18next'\nimport { download } from '../../resources/script/utils.tsx'\nimport styled from 'styled-components'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport VideoCard from '../VideoCard'\n\nimport {\n  Button,\n  Chip,\n  Avatar,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography\n} from '@material-ui/core'\n\nconst Wrapper = styled.div`\n  top: 56px;\n  left: 50%;\n  width: 100%;\n  height: 100vh;\n  overflow: auto;\n  position: fixed;\n  max-width: 960px;\n  background-color: #eeeeee;\n  transform: translateX(-50%);\n\n  .MuiChip-label {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 236px;\n  }\n`;\n\nconst Toolbar = styled.div`\n  background-color: #fafafa;\n  position: static;\n  position: sticky;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n`;\n\nconst ToolBarInner = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media screen and (max-width: 960px) {\n    padding: 0 16px;\n  }    \n`;\n\nconst ActionRow = styled.div`\n  width: 100%;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n  }\n`; \n\nconst Results = styled.div`\n  padding: 16px;\n`;\n\nconst CardsHolder = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(3, 1fr);\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media screen and (max-width: 425px) {\n    grid-template-columns: 1fr;\n  }  \n`;\n\nconst Stats = styled.div`\n  display: flex;\n  align-items: center;\n  \n  > div {\n    margin: 0 8px;    \n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    > div {\n      display: flex;\n      justify-content: space-between;\n    }  \n  }  \n`;\n\nexport default function ShowResults(): JSX.Element {\n  const { t } = useTranslation();\n  const [ store, dispatch ] = useContext(Context);\n  const videos = store.processed;\n  const [ expanded, setExpanded ] = useState(videos[0]?.name);\n\n  const handlePanelExpansion = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const close = () => {\n    dispatch({ type: 'updateStore', payload: { processed: [] } });\n  };\n\n  const downloadAll = (name, blobs) => {\n    blobs.forEach((b, i) => download(`${i + 1}_${name}`, b));\n  };\n\n  return (\n    <Wrapper>\n      <Toolbar>\n        <ToolBarInner>\n          <h1>{store.formData.action === 'trim' ? t('trimResults') : t('sliceResults')}</h1>\n          <Button color='inherit' onClick={() => close()}><strong>{t('close')}</strong></Button>\n        </ToolBarInner>\n      </Toolbar>\n\n      <Results>\n        {videos.map((item, index) => {\n          return (\n            <Accordion key={index} square expanded={expanded === item.name} onChange={handlePanelExpansion(item.name)}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant='h6'>\n                  <Chip color='primary' label={item.name} avatar={<Avatar>{item.blobs.length}</Avatar>}></Chip>\n                </Typography>\n              </AccordionSummary>\n\n              <ActionRow>\n                <div>\n                  <Stats>\n                    <div><strong>{t('command')}:</strong> {t(store.formData.action)}</div>\n                    <div><strong>{t('chunkSize')}:</strong> {store.formData.startTime}</div>\n                    <div><strong>{t('filesGenerated')}:</strong> {item.blobs.length}</div>\n                  </Stats>\n                </div>\n\n                <Button onClick={() => downloadAll(item.name, item.blobs)}>{t('downloadAll')}</Button>\n              </ActionRow>\n\n              <AccordionDetails>  \n                <CardsHolder>\n                  {item.blobs.map((videoUrl, index) => {\n                    return (\n                      <VideoCard key={index} url={videoUrl} name={item.name} index={index}/>\n                    )\n                  })}\n                </CardsHolder>\n              </AccordionDetails>\n            </Accordion>\n          )\n        })}\n      </Results>\n    </Wrapper>\n  )\n}","import steps from '../CutterSteps/'\nimport styled from 'styled-components'\nimport serialize from 'form-serialize'\nimport ShowResults from '../ShowResults'\nimport { Context } from '../../context'\nimport { useState, useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useTheme } from '@material-ui/core/styles'\nimport { useToasts } from 'react-toast-notifications'\nimport { MobileStepper, Button } from '@material-ui/core'\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons'\nimport { buildSubmitData, validateSubmitData, processFile, truncate } from '../../resources/script/utils'\n\nconst WrapperDiv = styled.div`\n  flex-grow: 1;\n`;\n\nconst ContentDiv = styled.div`\n  width: '100%';\n  padding: theme.spacing(2);\n`;\n\nconst Controls = styled.div`\n  width: 100%;\n  padding: 16px;\n  display: flex;\n  margin-bottom: 48px;\n  align-items: center;\n  border-bottom: solid 1px rgba(0, 0, 0, 0.12);\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n  > div {\n    width: 100%;\n    margin: 0 auto;\n    max-width: 960px;\n  }\n`;\n\nexport default function TextMobileStepper(): JSX.Element {\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const { addToast } = useToasts();\n  const [ activeStep, setActiveStep ] = useState(0);\n  const [ store, dispatch ] = useContext(Context);\n\n  const maxSteps = steps.length;\n  const form = document.forms.cutterform;\n\n  const isPageLoading = state => {\n    dispatch({ type: 'updateStore', payload: { loading: state } });\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    dispatch({\n      type: 'updateStore',\n      payload: {\n        formData: {\n          files: Array.from(form ? form.querySelector('input[type=file]').files: []),\n          ...serialize(form, { hash: true, empty: true })\n        }\n      }\n    });\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (activeStep !== maxSteps - 1) {\n      return handleNext();\n    }\n\n    const data = buildSubmitData(store.formData);\n    const validation = validateSubmitData(data);\n\n    if (!validation.valid) {\n      showValidationErrors(validation.errors);\n    } else {\n      processData(data);\n    }\n  };\n\n  const showValidationErrors = errors => {\n    errors.forEach(error => {\n      try {\n        addToast(t(error), { \n          autoDismiss: true,\n          appearance: 'error'\n        });\n      } catch {}\n    });\n  };\n\n  const processData = async data => {\n    const processed = [];\n\n    isPageLoading(true);\n\n    addToast(t('processingVideos'), { \n      autoDismiss: true,\n      appearance: 'success'\n    });\n\n    /**\n     * Is possible to send all fices at once to ffmpeg worker, or\n     * process all them using a single async function, but considering \n     * that the split (chunk) option can consume a lot of memory, we \n     * will send one file at once in a Sync FIFO to avoid problems \n     * with memory and heaps, so you can send as many files as you want.\n     */\n    \n    for (const [ index, file ] of data.files.entries()) {\n      await processFile({\n        file,\n        data,\n        processors: store.processors,\n      })\n        .then(proc => {\n          const filesProcessedStr = `${t('fileProcessed')}: \"${truncate(20, proc.result[0].name)}\".`;\n          const filesRemainingStr = `${t('filesRemaining')}: ${data.files.length - (index + 1)}`;\n\n          addToast(`${filesProcessedStr} ${filesRemainingStr}`, { \n            autoDismiss: true,\n            appearance: 'success'\n          });\n\n          processed.push(proc.result);\n        })\n        .catch(error => {\n          handleProcessError({ reference: error, file });\n        });\n    }\n\n    allFilesProcessed(processed);\n    isPageLoading(false);\n  };\n\n  const handleProcessError = error => {\n    console.error(error.reference);\n\n    addToast(`${t('errorWhileProcessing')} \"${error.file.name}\"`, { \n      autoDismiss: false,\n      appearance: 'error'\n    });\n  };\n\n  const allFilesProcessed = data => {\n    const dynamicUrlList = data\n      .map(item => ({ name: item[0].name, blobs: item[0].blobs }))\n      .map(item => {\n        item.blobs = item.blobs.map(b => window.URL.createObjectURL(b));\n\n        return item;\n      });\n\n    dispatch({ type: 'updateStore', payload: { processed: dynamicUrlList } });\n  };\n\n  return (\n    <WrapperDiv>\n      <Controls>\n        <MobileStepper\n          steps={maxSteps}\n          position=\"static\"\n          activeStep={activeStep}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={handleNext}\n              disabled={activeStep === maxSteps - 1}\n            >\n              {t('next')}\n              {theme.direction === 'rtl' ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n              {theme.direction === 'rtl' ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              {t('back')}\n            </Button>\n          }\n        />\n      </Controls>\n      \n      <form id=\"cutterform\" action=\"/\" onSubmit={handleSubmit}>\n        {steps.map((step, index) => (\n          <ContentDiv hidden={index !== activeStep} key={index}>\n            { step }\n          </ContentDiv>\n        ))}\n      </form>\n\n      {store.processed.length > 0 && <ShowResults/>}\n    </WrapperDiv>\n  );\n}","import { Container } from '@material-ui/core'\nimport Logo from '../../components/Logo/'\nimport Loading from '../../components/Loading'\nimport CutterForm from '../../components/CutterForm'\nimport { Context } from '../../context'\nimport { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport default function Home(): JSX.Element {\n  const { t } = useTranslation();\n  const [ store ] = useContext(Context);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Logo subtitle={t('appSubtitle')} />\n\n      {store.loading && <Loading />}\n      {!store.loading && store.supported && <CutterForm />}\n    </Container>\n  )\n}\n","import styled from 'styled-components'\nimport { useState } from 'react'\nimport { Info } from '@material-ui/icons/'\nimport { Typography, Button } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst AboutRoot = styled.div`\n  color: var(--primary-color);\n\n  svg {\n    cursor: pointer;\n  }\n`;\n\nconst AboutAside = styled.div`\n  position: fixed;\n  background-color: var(--primary-color);\n  width: 100%;\n  cursor: initial;\n  max-width: 425px;\n  right: 0;\n  top: 0;\n  height: 100vh;\n  color: #ffffff;\n  transition: 200ms;\n\n  &[data-visible=false] {\n    right: -100%;\n    transition: 200ms;\n  }\n  \n  a {\n    font-weight: 700;\n    color: currentColor;\n  }\n  `;\n  \nconst AboutHeader = styled.div`\n  padding: 16px;\n  border-bottom: solid 1px currentColor;\n  p {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst AboutContent = styled.div`\n  padding: 16px;\n`;\n\nexport default function AboutToggler(): JSX.Element {\n  const { t } = useTranslation();\n  const [ showAbout, setShowAbout ] = useState(false);\n\n  const toggleAbout = () => {\n    setShowAbout(!showAbout);\n  };\n\n  return (\n    <AboutRoot>\n      <Info fontSize=\"large\" onClick={() => toggleAbout()} />\n      \n      <AboutAside data-visible={showAbout}>\n        <AboutHeader>\n          <Typography variant='h4' component='p'>\n            {t('about')} \n            \n            <Button size=\"small\" onClick={() => toggleAbout()} style={{color: 'currentColor'}}>\n              {t('close')}\n            </Button>\n          </Typography>\n        </AboutHeader>\n\n        <AboutContent>\n          <p>{t('appAbout')}</p><br/>\n\n          <ul>\n            <li>\n              <a href=\"https://github.com/felippe-regazio/trimmer\" target=\"_blank\" rel=\"noreferrer\">Trimmer</a><br/>\n              {t('by')} <a href=\"https://github.com/felippe-regazio/\" target=\"_blank\" rel=\"noreferrer\">Felippe Regazio</a><br/><br/>\n            </li>\n            <li>\n              <a href=\"https://github.com/felippe-regazio/ffmpeg-client-js\" target=\"_blank\" rel=\"noreferrer\">Ffmpeg Worker</a><br/>\n                {t('by')} <a href=\"https://github.com/felippe-regazio/\" target=\"_blank\" rel=\"noreferrer\">Felippe Regazio</a><br/><br/>\n              </li>\n            <li>\n              <a href=\"https://github.com/Kagami/ffmpeg.js\" target=\"_blank\" rel=\"noreferrer\">Ffmpeg.js Port</a><br/>\n              {t('by')} <a href=\"https://github.com/Kagami\" target=\"_blank\" rel=\"noreferrer\">Kagami Hiiragi</a><br/><br/>\n            </li>\n          </ul>\n        </AboutContent>\n      </AboutAside>\n    </AboutRoot>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Language } from '@material-ui/icons/'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nconst LangTogglerRoot = styled.div`\n  color: var(--primary-color);\n\n  svg {\n    cursor: pointer\n  }\n`;\n\nexport default function LangToggler(): JSX.Element {\n  const { t, i18n } = useTranslation();\n  const [ anchorEl, setAnchorEl ] = React.useState(null);\n\n  const handleClick = (event: SyntheticEvent): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const setLanguage = (lang: string): Promise => {\n    handleClose();\n    \n    window.localStorage.setItem('trimmerLocale', lang);\n\n    return i18n.changeLanguage(lang);\n  };\n\n  return (\n    <LangTogglerRoot>\n      <Language fontSize=\"large\" aria-controls=\"lang-toggler\" aria-haspopup=\"true\" onClick={handleClick} />\n      \n      <Menu\n        id=\"lang-toggler\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => setLanguage('en')}>{t('english')}</MenuItem>\n        <MenuItem onClick={() => setLanguage('pt-BR')}>{t('portuguese')}</MenuItem>\n      </Menu>\n    </LangTogglerRoot>\n  );\n}\n","import AboutToggler from '../AboutToggler/'\nimport LangToggler from '../LangToggler/'\nimport styled from 'styled-components'\n\nconst UpperHeaderRoot = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 10;\n\n  .upper-header-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: 14px 0;\n    justify-content: flex-end;\n\n    > * {\n      margin: 0 14px;\n    }\n  }\n`;\n\nexport default function UpperHeader (): JSX.Element {\n  return (\n    <>\n      <UpperHeaderRoot>\n        <div className=\"upper-header-content\">\n          <LangToggler />\n          <AboutToggler />\n        </div>\n      </UpperHeaderRoot>\n    </>\n  )\n}","import Home from './views/Home'\nimport { Context } from './context'\nimport { useContext, useEffect } from 'react'\nimport UpperHeader from './components/UpperHeader/'\nimport { HashRouter, Switch, Route } from \"react-router-dom\"\n\ndeclare global {\n  interface Window {\n    /* eslint-disable-next-line */\n    FFMPEGClient: any;\n    /* eslint-disable-next-line */\n    FFMPEGClientProcessors: any;\n  }\n}\n\nexport default function App(): JSX.Element {\n  const [ , dispatch ] = useContext(Context);\n\n  useEffect(() => {\n    const ffmpeg = new window.FFMPEGClient({\n      worker: `${window.location.href.replace('/#/', '')}/ffmpeg-client-js/ffmpeg-worker/worker.js`,\n      on: {\n        notSupported: () => {\n          dispatch({ \n            type: 'updateStore', \n            payload: { \n              ffmpeg: false,\n              loading: false, \n              supported: false,\n            }\n          });          \n        },\n        ready: () => {\n          dispatch({ \n            type: 'updateStore', \n            payload: { \n              ffmpeg: ffmpeg,\n              loading: false, \n              supported: true,\n              processors: new FFMPEGClientProcessors(ffmpeg)\n            }\n          });\n        },\n      }\n    });\n  }, []);\n\n  return (\n    <HashRouter basename=\"/\">\n      <UpperHeader />\n      \n      <Switch>        \n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Store from './context'\nimport './i18n/'\nimport App from './App'\nimport { ToastProvider } from 'react-toast-notifications';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport 'fontsource-roboto'\nimport './resources/style/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    \n    <Store>\n      <ToastProvider autoDismissTimeout={10000}>\n        <App />\n      </ToastProvider>\n    </Store>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}